---
import Layout from '../../layouts/Layout.astro';
import SubHeader from '../../components/SubHeader.astro';
import Footer from '../../components/Footer.astro';
import { articles } from '../../data/articles';

const articlesArray = Object.entries(articles).map(([slug, article]) => ({ ...article, slug }));

// URLからタグを取得
const url = new URL(Astro.request.url);
const activeTag = url.searchParams.get('tag');

// タグで絞り込み
const filteredArticles = activeTag
  ? articlesArray.filter(article => article.tag === activeTag)
  : articlesArray;

// タグ一覧を動的に生成
const allTags = ['すべて', ...new Set(articlesArray.map(article => article.tag))];
---
<Layout>
  <SubHeader />
  <main>
    <section class="max-w-2xl mx-auto py-12 px-4">
      <h1 class="text-3xl font-bold mb-8">日記一覧</h1>

      <!-- タグ絞り込み -->
      <div class="flex flex-wrap justify-center gap-2 mb-8">
        {allTags.map(tag => {
          const isActive = (tag === 'すべて' && !activeTag) || tag === activeTag;
          const href = tag === 'すべて' ? '/diary/' : `/diary/?tag=${tag}`;
          return (
            <a href={href} class={`px-4 py-2 rounded-full text-sm font-semibold border shadow-sm transition-all duration-150 ${isActive ? 'bg-primary text-white border-primary shadow-lg' : 'bg-gray-800 text-gray-300 border-gray-700 hover:bg-primary hover:text-white'} hover:scale-105`}>
              {tag}
            </a>
          );
        })}
      </div>

      <ul class="space-y-6">
        {filteredArticles.map(article => (
          <li class="border-b border-gray-700 pb-4">
            <a href={`/diary/${article.slug}/`} class="text-xl font-semibold text-primary hover:underline">{article.title}</a>
            <div class="flex items-center gap-4 mt-2 text-xs text-gray-400">
              <span class="px-2 py-0.5 rounded bg-gray-700 text-white">{article.tag}</span>
              <span>{article.date}</span>
            </div>
          </li>
        ))}
      </ul>
    </section>
  </main>
  <Footer />
</Layout>